# 이진 탐색 알고리즘 p. 120

# 이진 탐색 알고리즘을 사용하려면 배열 데이터가 정렬되어있어야 한다 (오름차순 or 내림차순).
# 이진 탐색 알고리즘의 시간 복잡도 = O(log n) 이다.

# n 길이의 배열에서 특정 값 찾기

# 임의 11 길이의 배열
lst = [5,7,15,28,29,31,39,58,68,70,95]

# 배열의 길이
l = len(lst)

# 시작값과 끝값 고정
start = 0
end = l - 1

# 찾는 값 (여기선 39로 가정)
find = 39

# 시작값이 끝값보다 커지면 값을 찾은 것임
while start <= end :
    # 중앙 값
    mid = (start + end) // 2
    
    # 중앙 값이 찾는 값과 같으면 끝
    if lst[mid] == find :
        print(mid)
        break
    # 중앙 값이 찾는 값보다 크면
    elif lst[mid] > find :
        # 끝 값을 중앙 값의 바로 앞 값으로 이동
        end = mid - 1
    # 중앙 값이 찾는 값보다 작으면
    else :
        # 시작값을 중앙값 바로 뒷 값으로 이동
        start = mid + 1