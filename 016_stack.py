# 스택 자료구조 기본 -> 내 식대로 간단히 정리한 버전

# 스택은 후입선출 => Last In First Out (LIFO) 구조이다.

# 파이썬 내에서 스택은 리스트로도 간단하게 구현할 수 있다.
stack = []

# 스택에 데이터 추가 => 푸시(push) 라고 한다. 가장 스택의 가장 마지막에 데이터를 추가한다.
stack.append(10)
stack.append(20)
stack.append(30)

# 스택의 길이 (현재 스택에 들어있는 원소 개수) 확인
print(f"현재 스택 내 원소 개수 : {len(stack)}")

# 스택의 가장 마지막 원소 확인 => peek 라고 한다.
print(f"현재 스택의 가장 마지막 원소 : {stack[-1]}")

# 스택의 데이터 꺼내기 => 팝(pop) 이라고 한다. 스택의 가장 마지막 데이터를 꺼낸다.
stack.pop()
print(stack)

# 스택의 모든 데이터 없애기
stack.clear()
print(stack)

# 스택 내의 데이터 찾기 => 인자 값으로 들어온 값을 순회하며 찾는다. 시간 복잡도는 O(n) -> 스택 내에 해당 데이터가 없으면 오류 발생
stack.index(30)

# 스택 내의 특정 데이터 개수 찾기 => 인자값으로 들어온 값을 순회하며 개수를 센다. 시간 복잡도는 O(n)
stack.count(30)